name: Go Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '>=1.21'

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version

      - name: Install Go protobuf plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Compile protobuf files
        run: |
          chmod +x ./script/compile-proto.sh
          ./script/compile-proto.sh

      - name: Tidy Go modules
        run: go mod tidy

      - name: Install and start etcd
        run: |
          sudo apt-get install -y etcd-server
          sudo systemctl start etcd
          sudo systemctl status etcd --no-pager
          # Wait for etcd to be ready
          for i in {1..10}; do
            if curl -s http://localhost:2379/health > /dev/null 2>&1; then
              echo "etcd is ready"
              break
            fi
            echo "Waiting for etcd to start... ($i/10)"
            sleep 1
          done

      - name: Run tests with coverage
        run: go test -v -p 1 -coverprofile=coverage.out -covermode=atomic ./...

      - name: Calculate coverage percentage
        id: coverage
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}')
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
